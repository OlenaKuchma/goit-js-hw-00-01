{"mappings":"AA4IA,MAAMA,EAAiBC,GACZC,MAAM,qCAAqCD,KAAME,MAAKC,GAAKA,EAAEC,SAQxE,SAASC,EAAeC,GACpBC,QAAQC,IAAI,oCACZD,QAAQC,IAAIF,E,CAIhB,SAASG,EAAaC,GAClBH,QAAQC,IAAI,gCACZD,QAAQC,IAAIE,E,CAdhBX,EAAe,GAAGG,KAAKG,GAAgBM,MAAMF,GAC7CV,EAAe,GAAGG,KAAKG,GAAgBM,MAAMF,GAC7CV,EAAe,GAAGG,KAAKG,GAAgBM,MAAMF,GAC7CV,EAAe,QAAQG,KAAKG,GAAgBM,MAAMF","sources":["src/js/promices.js"],"sourcesContent":["\n// let data = 'тут ще нічого нема';\n\n// const promise = new Promise((resolve, reject) => {\n//     // resole(5);\n    \n//     const canFullfile = Math.random() > 0.5;\n\n//     setTimeout(() => {if(canFullfile) {\n//         resolve('Проміс виконався успішно - виконаний - fullfiled');\n//     }\n//     reject('Проміс виконався не успішно - відхилений - rejected');}, 2000);\n// });\n// console.log(promise);\n\n// promise.then(result => {console.log(result);\n// }, error => {console.log(error);\n// }\n// )\n\n\n// then(onSuccesss, onError)\n// console.log(data);\n\n// promise.then(onFullfiled, onRejected);\n\n// // console.log(data);\n\n// function onFullfiled(result) {\n//     console.log(result);    \n// };\n\n// function onRejected(error) {\n//     console.log(error);    \n// };\n\n\n// promise.then(result => {\n//     console.log(result);\n\n//     return 5;\n    \n// }).then(x => {console.log(x);\n//     return 10;\n// }).then(y => {console.log(y);\n// });\n// ------------------------------\n// promise\n// .then(onFullfiled, onRejected)\n// .then(\n//     x => {console.log(x);\n\n//         throw new Error ('помилка в другому then');\n\n//      return 10;}, \n\n//      error => console.log(error),\n//     )\n// .then(\n//     y => console.log(y), \n\n//     error => console.log(error),\n//        );\n// ----------------------\n// promise\n// .then(onFullfiled)\n// .then(\n//     x => {console.log(x);\n\n//         // throw new Error ('помилка в другому then');\n//            return 10;}\n//     )\n// .then(\n//     y => {console.log(y)}\n//        )\n// .catch(error => {console.log(error);\n//        }).finally(() => console.log('Я буду виконаний в любому випадку'),);\n\n// ---------------------------------------\n\n// const makeOrder = dish => {\n// const DELAY = 1000;\n\n// const promise = new Promise((resolve, reject) => {\n//     const passed = Math.random() > 0.5;\n//     setTimeout(() => \n//         {\n//             if (passed) {\n//                 resolve('ось Ваша страва');\n//             } \n//                 reject('вибачте продукти скінчилися');\n//     }, DELAY);\n\n// });\n// return promise;\n\n\n// };\n\n// const makeOrder = dish => {\n\n// return Promise.resolve(`ось Ваша страва ${dish}`);    \n    \n// // const promise = new Promise((resolve, reject) => {\n// //     const passed = Math.random() > 0.5;\n        \n// //     if (passed) {\n// //         onSuccess(`ось Ваша страва ${dish}`);\n// //     }  \n \n// // });    \n//     };\n    \n\n// makeOrder('булочка').then(onMakeOrderSuccess).catch(onMakeOrderError);\n\n\n\n// function onMakeOrderSuccess(result) {\n//     console.log('onMakeOrderSuccess');\n//     console.log(result);\n    \n    \n// }\n\n// function onMakeOrderError(error) {\n//     console.log('onMakeOrderError');\n//     console.log(error);\n    \n    \n// }\n\n\n// -----------pocemon\n\n\n// function fetch(url) {\n//     return new Promise(...)\n// }\n\nconst fetchPokemonId = id => {\n    return fetch(`https://pokeapi.co/api/v2/pokemon/${id}`).then(r => r.json())};\n\nfetchPokemonId(1).then(onFetchSuccess).catch(onFetchError);\nfetchPokemonId(2).then(onFetchSuccess).catch(onFetchError);\nfetchPokemonId(3).then(onFetchSuccess).catch(onFetchError);\nfetchPokemonId(390055).then(onFetchSuccess).catch(onFetchError);\n\n\nfunction onFetchSuccess(pokemon) {\n    console.log('onFetchSuccess -> onFetchSuccess');\n    console.log(pokemon);\n  \n} \n\nfunction onFetchError(error) {\n    console.log('onFetchError -> onFetchError');\n    console.log(error);\n}\n\n\n// .then(pokemon => {\n//     console.log(pokemon);\n    \n// }).catch(error => {\n//     console.log('це в блоці catch');\n    \n//     console.log(error)}"],"names":["$e987a3b0fb7ef19f$var$fetchPokemonId","id","fetch","then","r","json","$e987a3b0fb7ef19f$var$onFetchSuccess","pokemon","console","log","$e987a3b0fb7ef19f$var$onFetchError","error","catch"],"version":3,"file":"index.f312d2b6.js.map"}